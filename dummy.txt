
// function extractUserFromPayload(params) {
//   return;
// }

// passport.use(
//     //   new Strategy(
//     //     {
//     //       clientID: config.googleID,
//     //       clientSecret: config.googleSecret,
//     //       callbackURL: "/api/auth/google/callback",
//     //     },

//     //       try {
//     //         const exists = await  User.find({ email: user.email });
//     //         if (exists)
//     //       } catch () {

//     //       }

//     //     }
//     //   )
//     // );
//     // passport.serializeUser((user, done) => {
//     //   done(null, user.id);
//     // });
//     // passport.deserializeUser((id, done) => {
//     //   console.log(id, done);
//     // });

// async (accessToken, refreshToken, profile, done) => {
//           // steps [ extract user and arrange user, check if user exists, if user doesn't exist create user, send done]
//           const person = profile._json;
//           const details = {
//             firstName: person.given_name,
//             lastName: person.family_name,
//             email: person.email,
//             profileImage: person.picture,
//           };

// Promise.resolve()
//             .then(extractDetails)
//             .then(checkIfUserExists)
//             .then(createIfNotExists)
//             .send(sendResponse)
//             .catch((err) => done(err, null));

//           function extractDetails() {

//             return Promise.resolve(details);
//           }

//           function checkIfUserExists(user) {
//             console.log("send 1 response");
//             // return Promise.all([
//             //
//             //   Promise.resolve(user),
//             // ]);
//           }

//           function createIfNotExists([exists, user]) {
//             console.log("send 2 response");
//             if (exists) return Promise.resolve(user);

//             return User.create(user);
//           }

//           function sendResponse(user) {
//             console.log(user);
//             //return done(null, user);
//           }


//routes
// // logout route
// authRouter.post("/logout", (req, res) => {
//   req.session.destroy();
//   res.send({
//     message: "you're now logged out",
//   });
// });

// // failed
// authRouter.get("/failed", (req, res) => {
//   res.json({
//     message: "Authentication Fail",
//   });
// });

// // dummy markup for test
// authRouter.get("/login", (req, res) => {
//   res.send(`
//     <form action="/api/auth/login" method="POST">
//       <input type="email" name="email" placeholder="email" required>
//       <input type="password" name="password" placeholder="password" required>
//       <input type="submit" value="Submit">
//     </form>
//   `);
// });

// authRouter.get("/register", (req, res) => {
//   res.send(`
//     <form action="/api/auth/register" method="POST"> <br />
//       <input name="firstName" placeholder="first name" required> <br />
//       <input name="lastName" placeholder="last name" required> <br />
//       <input type="email" name="email" placeholder="email" required> <br />
//       <input type="password" name="password" placeholder="password" required> <br />
//       <input name="confirmPassword" type="password" placeholder="password" required>
//       <input type="submit" value="Submit">
//     </form>
//   `);
// });

// export function getCoordinates(req, res, next) {
//   // opencage
//   //   .geocode({ q: req.body.address.lga + "," + req.body.address.state })
//   //   .then((data) => {
//   //     const results = data.results.map((r) => r.geometry);
//   //     req.body.geometry.coordinates = [results[0].lng, results[0].lat];
//   //     next();
//   //   })
//   //   .catch((error) => {
//   //     console.log("error", error.message);
//   //     next(error)
//   //   });
//   try {

//   } catch (err) {

//   }
// }